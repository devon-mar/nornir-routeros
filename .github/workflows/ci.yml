---
name: CI
"on":
  push:
    branches:
      - master
      - devel
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cache-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}

      - name: Run poetry install
        run: poetry install
        if: steps.cache-poetry-dependencies.outputs.cache-hit != 'true'

      - name: Lint with flake8
        run: |
          poetry run flake8 nornir_routeros --count --max-line-length=120 --show-source --statistics

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cache-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}

      - name: Run poetry install
        run: poetry install
        if: steps.cache-poetry-dependencies.outputs.cache-hit != 'true'

      - name: Build docs
        working-directory: ./docs
        run: poetry run make html SPHINXOPTS="-n"

  tests:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      # https://stackoverflow.com/questions/62977821/how-to-cache-poetry-install-for-github-actions
      - name: Load cached venv
        id: cache-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}

      - name: Run poetry install
        run: poetry install
        if: steps.cache-poetry-dependencies.outputs.cache-hit != 'true'

      - name: Restore Vagrant boxes from cache
        uses: actions/cache@v2
        with:
          path: ~/.vagrant.d/boxes
          key: ${{ runner.os }}-vagrant-${{ hashFiles('**/Vagrantfile') }}

      - name: Vagrant up
        working-directory: ./tests
        run: |
          vagrant up

      - name: Run pytest
        run: |
          poetry run pytest --cov=./nornir_routeros --cov-report=xml --cov-branch

      - name: Upload coverage to codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
